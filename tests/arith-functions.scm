
(define (test-arithmetic-functions)
  
  (assert (= 0 0))
  (assert (< 0 1))
  (assert (< -2 -1))
  (assert (<= 0 0))
  (assert (<= -2 -2))
  (assert (<= 0 1))
  (assert (<= -2 -1))
  (assert (> 1 0))
  (assert (> -1 -2))
  (assert (>= 0 0))
  (assert (>= -2 -2))
  (assert (>= 1 0))
  (assert (>= -1 -2))
  
  (assert (= (+ 1 2) 3))
  (assert (= (+ 1 -2) -1))
  (assert (= (- 1 2) -1))
  (assert (= (- 1 -2) 3))
  (assert (= (* 1 2) 2))
  (assert (= (* 1 -2) -2))
  (assert (= (/ 1 2) 0.5))
  (assert (= (/ 1 -2) -0.5))
  
  (assert (= (truncate 1.5) 1))
  (assert (= (floor -1.5) -2.0))
  (assert (= (ceiling -1.5) -1.0))
  (assert (= (round 1.4) 1.0))
  (assert (= (round 1.5) 2.0))
  (assert (= (round -1.4) -1.0))
  (assert (= (round -1.5) -2.0))
  
  (assert (= (inc 1) (+ 1 1)))
  (assert (= (dec 1) (- 1 1)))
  (assert (= ( 1+ 1) (+ 1 1)))
  (assert (= (-1+ 1) (- 1 1)))
  (assert (= (inc 1.0) (+ 1.0 1)))
  (assert (= (dec 1.0) (- 1.0 1)))
  (assert (= ( 1+ 1.0) (+ 1.0 1)))
  (assert (= (-1+ 1.0) (- 1.0 1)))
  
  (assert (= (abs 1) 1))
  (assert (= (abs -1) 1))
  (assert (= (abs 1.0) 1))
  (assert (= (abs -1.0) 1))
  
  (assert (= (quotient 10 4) 2))
  (assert (= (quotient -10 4) -2))
  (assert (= (quotient 10 -4) -2))
  (assert (= (remainder 10 4) 2))
  (assert (= (remainder -10 4) -2))
  (assert (= (remainder 10 -4) 2))
  
  (assert (= (min 1 2 3) 1))
  (assert (= (max 1 2 3) 3))
)
